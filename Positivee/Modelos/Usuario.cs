//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Dapper;
using Positive;
using Positive.Presentacion;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using FontAwesome.Sharp;
namespace Positive
{
    

    public partial class Usuario
    {
        
    //atributos
        public int id_usuario { get; set; }
        public int id_rol { get; set; }

        [Required(ErrorMessage = "El nombre de usuario es obligatorio.")]
        [StringLength(50, ErrorMessage = "El nombre de usuario debe tener como máximo 50 caracteres.")]
        public string nombre_usuario { get; set; }

        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        [StringLength(100, MinimumLength = 5, ErrorMessage = "La contraseña debe tener entre 6 y 100 caracteres.")]
        public string password { get; set; }
        public int id_estado { get; set; }
        public int id_persona { get; set; }

     string _connectionString = "Server=mysql-proyectois2.alwaysdata.net;Database=proyectois2_puntoventa;User Id=362639;Password=Pollito1q;";
        string action = "";
        Seccion_usuarios _principal;

    //metodos
    //validar usuario
    public void validar_usuario(string p_user,string p_pass, Login p_login){
        
            string username = p_user;
            string password = p_pass;
            Usuario usuarioAutenticado;
            Login login=p_login;
            try
            {
                using (var db = new MySqlConnector.MySqlConnection(_connectionString))
                {
                    usuarioAutenticado = db.QueryFirst<Usuario>(
                              sql: "login",
                              param: new { p_username = username,p_password=password },
                              commandType: CommandType.StoredProcedure);
                }
                if (usuarioAutenticado != null)
                {
                     login.Hide();
                    //crear menu principal
                     // Muestra el formulario principal
                    Control.cargar_usuario(usuarioAutenticado);
                    Control.cargar_login(p_login);
                     Control.crear_menu_principal();
                    
                }
                else
                {
                    MessageBox.Show("Nombre de usuario o contraseña incorrectos", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            catch (Exception ex)
            {
                MessageBox.Show("No se pudo reallizar la busqueda del usuario " + ex);
            }
    }}
}
